---
name: gitmodules-updated

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
    paths:
      - ".github/workflows/gitmodules-updated.yaml"
      - "update-github-pages.tmpl"
      - "gitmodules-cache-steps.tmpl"
      - ".gitmodules"
    branches:
      - main
  push:
    paths:
      - ".github/workflows/gitmodules-updated.yaml"
      - "update-github-pages.tmpl"
      - "gitmodules-cache-steps.tmpl"
      - ".gitmodules"
    branches:
      - main

permissions:
  contents: write

concurrency:
  group: "gitmodules-updated"
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:

  gitmodules-updated:
    runs-on: ubuntu-latest
    continue-on-error: false
    env:
      CI_COMMIT_MESSAGE: Compile Submodule Action
    steps:
      - name: Checkout Template Theme
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - name: Set environment variable "is-auto-commit"
        if: github.event.commits[0].message == env.CI_COMMIT_MESSAGE
        run: echo "is-auto-commit=true" >> $GITHUB_ENV
      - name: create workflow
        if: ${{ env.is-auto-commit }} != true
        run: |
          GITMODULESLIST=`git config --file .gitmodules --get-regexp path | \
                          grep 'content' | \
                          awk '{ print $2 }' | \
                          cut -f 2- -d "/" | \
                          paste -sd ", " -`
          for i in ${GITMODULESLIST//,/ }
          do
            cat gitmodules-cache-steps.tmpl | \
            sed -e "s/SUBMODULENAME/${i}/g" >> gitmodules-cache-steps.yaml
          done
          cat update-github-pages.tmpl | \
            sed -e "s/GITMODULESLIST/${GITMODULESLIST}/g" | \
            sed -e "/GITMODULESCACHESTEPS/{r gitmodules-cache-steps.yaml" -e 'd}' > \
            .github/workflows/update-github-pages.yaml
          rm gitmodules-cache-steps.yaml
      - name: commit
        if: ${{ env.is-auto-commit }} != true
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ${{ env.CI_COMMIT_MESSAGE }}
